/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dashboard/scripts/ConnectToCamera.js":
/*!**********************************************!*\
  !*** ./dashboard/scripts/ConnectToCamera.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConnectToCamera\": () => (/* binding */ ConnectToCamera)\n/* harmony export */ });\n\nclass ConnectToCamera {\n\n    bindFnc = {};\n\n\n\n\n    ConnectToCamera(ctx) {\n        this.ctx = ctx;\n        console.log(\"constr\");\n\n    }\n\n\n    sync() {\n\n    }\n\n    getCameraConfig(objSettings) {\n        let endpointConfig = this.__makeUrl(\"settings\");\n        this.objSettings = objSettings;\n\n\n        this.__executeAjax(endpointConfig, (data) => objSettings.renderSettigsPage(data));\n    }\n\n    getImportantSettings(objSettings) {\n        let endpointConfig = this.__makeUrl(\"important\");\n\n        this.__executeAjax(endpointConfig, (data) => objSettings.renderImportantSettingPage(data));\n\n\n    }\n\n\n\n    editCompressCurrCapture([coeffCompress, coefResize], callback) {\n        let endpointEditCompress = this.__makeUrl(\"compress\");\n\n        this.__executeAjax(endpointEditCompress, callback, {\n            \"coeff_compress\": coeffCompress,                                            // коэффициент ресайза\n            \"coeff_resize\": coefResize,\n        }, \"POST\");\n    };\n\n    reloadCamera(callback) {\n        let endpoint_reload = this.__makeUrl(\"reload\");\n\n        this.__executeAjax(endpoint_reload, (data) => console.log(data));\n    }\n\n\n    bind(str, fnc) {\n        this.bindFnc[str] = fnc;\n    }\n\n\n    \n\n    \n\n    async init(ipStr, callback, ctx) {\n        this.waitSpinner = $(\"#wait_event_spinner\");\n        this.ctx = ctx;\n        this.endpoint = ipStr\n        this.__localSaveData = null;\n        this.condition = null;\n        this.localFiles = {};\n        this.currImg = null;\n        // this.rootUrlApi = \"api\";\n        // this.bindFnc = {};\n        this.successInitCamera = null;\n\n\n        // this.__executeAjax(this.__makeUrl(\"trystart\"), callback)\n\n        return this.__executeAjaxPromise(\"trystart\", '');\n        // callback();\n\n\n    }\n\n\n\n\n    getImgByName(nameFIle, callback, coeff = 10, coefCompress = 100) {\n\n        let url = this.__makeUrl('file/' + nameFIle);\n\n        this.__executeAjax(url, callback, {\n            \"coeff_resize\": coeff,                                            // коэффициент ресайза\n            \"coeff_compress\": coefCompress,\n        }, \"GET\");\n    }\n\n\n\n\n\n\n    delFileByName(nameFIle, callback) {\n\n        let endpoint_del = this.__makeUrl('file/'+ nameFIle);\n        this.__executeAjax(endpoint_del, callback(nameFIle), '', 'DELETE')\n\n\n        console.log(\"delFileByNAme\");\n    }\n\n\n\n    capture(callback) {\n        console.log(\"____________________context____________ capture\");\n        console.log(this.ctx);\n        let urlForCapture = this.__makeUrl(\"capture\");\n        this.__executeAjax(urlForCapture, callback);\n    }\n\n\n\n    \n\n    onHiddenPage() {\n        this.waitSpinner.removeClass('busy');\n        $(\"#wrapper_img_from_camera\").addClass('hidden')\n    }\n\n    offHiddenPage() {\n        this.waitSpinner.addClass('busy');\n        $(\"#wrapper_img_from_camera\").removeClass('hidden')\n    }\n\n\n    // __executeAjaxPromise(url, data, type = 'GET') {\n    //     url = this.__makeUrl(url)\n    //     return new Promise((succeed, fail) => {\n    //         const xhr = new XMLHttpRequest();\n    //         xhr.open(type, url);\n    //         xhr.addEventListener(\"load\", () => {\n    //             if (xhr.status >= 200 && xhr.status < 400)\n    //                 succeed(xhr.response);\n    //             else\n    //                 fail(new Error(`Request failed: ${xhr.statusText}`));\n    //         });\n    //         xhr.addEventListener(\"error\", () => fail(new Error(\"Network error\")));\n    //         xhr.send(data);\n\n\n    //     })\n    // };\n\n    __executeAjaxPromise(url,  data, method = 'GET') {\n        this.onHiddenPage();\n        // var fnc_alert =  this.bindFnc['show_alert']();\n        // console.log(fnc_alert);\n        url = this.__makeUrl(url);\n        return new Promise((resolve, reject) => {\n            var decorationResolve = (data) => {\n                this.offHiddenPage();\n                this.bindFnc['show_alert']()();\n\n                // fnc_succes(data);\n                resolve(data);\n            }\n          $.ajax({\n            method: method,\n            url: url,\n            data: data,\n            // headers: headers,\n            dataType: 'json',\n            success: decorationResolve,\n            error: (error) => {\n                this.offHiddenPage();\n                console.log(error.responseText);\n                alert(error.responseText);\n                reject(error);\n              },\n          });\n        },)\n      }\n\n\n\n\n\n   \n\n\n\n    syncWithCamera(callback) {\n        let endpoint_api = this.__makeUrl(\"refresh\");\n        this.__executeAjax(endpoint_api, callback)\n    };\n\n\n    changeSettingsCamera(diff, callback) {\n\n        let endpEditSettings = this.__makeUrl(\"settings\");\n        this.__executeAjax(endpEditSettings, (data) => console.log(data),\n            diff, 'post');\n\n\n        console.log(diff);\n\n    }\n\n\n\n    __makeUrl(add) {\n        //return `${this.ip}:${this.port}/${root}/${add}`;\n        var outputStr = \"http://\" + this.endpoint + \"/\" + add;\n        // if (Array.isArray(add)) {\n        //     add.forEach(el => {\n        //         outputStr += \"/\" + el;\n        //     });\n        // } else {\n        //     outputStr += \"/\" + add;\n        // }\n\n\n\n        return outputStr;\n    };\n\n\n    getInfoFilesys(callback) {\n        let endpoint_sys = this.__makeUrl(\"infosys\");\n        this.__executeAjax(endpoint_sys, callback);\n    };\n\n\n    getAllFiles(callback) {\n        let endpointUrl = this.__makeUrl('files');\n        this.__executeAjax(endpointUrl, callback)\n\n        //return this.__localSaveData;\n\n    };\n\n\n    __executeAjax(url, fnc_succes, params = null, _method = 'get', fnc_error = null) {\n        console.log(url);\n        this.onHiddenPage()\n        \n\n\n        let decoratorFncSucces = (data) => {\n            let fnc = this.bindFnc['show_alert']();\n            fnc();\n            this.offHiddenPage();\n\n            fnc_succes(data);\n            console.log(\"test\");\n\n\n        }\n\n\n        if (fnc_error == null) {\n            fnc_error = (error, hello) => {\n                alert(error.responseText);\n                this.offHiddenPage();\n                console.log(error);\n            };\n        }\n\n        $.ajax({\n\n            url: url,\n\n            //url: 'http://127.0.0.1:8000/api/login/',         /* Куда пойдет запрос */\n\n            method: _method,             /* Метод передачи (post или get) */\n\n            dataType: 'json',          /* Тип данных в ответе (xml, json, script, html). */\n            data: params,\n\n            success: decoratorFncSucces,\n            error: fnc_error,\n\n        });\n\n\n    };\n\n}\n\n\n\n\n\n//# sourceURL=webpack:///./dashboard/scripts/ConnectToCamera.js?");

/***/ }),

/***/ "./dashboard/scripts/SettingsCamera.js":
/*!*********************************************!*\
  !*** ./dashboard/scripts/SettingsCamera.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsCamera\": () => (/* binding */ SettingsCamera)\n/* harmony export */ });\nclass SettingsCamera {\n\n    importantSettings = [\"iso\", \"shutterspeed2\", \"exposurecompensation\", \"f-number\", \"shutterspeed\", \"iso\", \"whitebalance\", \"autoiso\", \"flashmode\", \"imagequality\", \"isoautohilimit\", \"imagesize\", \"d092\"]\n\n    _bindFunc = {};\n    bind = {};\n    actualSettings = {};\n\n    _Camera = null;\n\n    initCamera(cameraObj) {\n        this._Camera = cameraObj;\n    }\n\n    renderSettigsPage(data, tabsLinkId = \"#md-header\", tabsContentId = \"#myTabContent\") {\n        let htmlTabs = this.renderTabsHtml(data);\n        $(\"#md-header\").html(htmlTabs[0]);\n        $(\"#myTabContent\").html(htmlTabs[1]);\n\n        for (let key in data) {\n            this.bind[labelToId(key)] = \"\";\n            let htmlTabForm = \"\";\n            for (let form in data[key]) {\n                if (data[key][form][\"type\"] == \"ToggleWidget\") {\n                    this.actualSettings[form] = data[key][form][\"value\"] >= 1 ? 1 : 0;\n                } else {\n                    this.actualSettings[form] = data[key][form][\"value\"];\n                }\n                this.bind[labelToId(key)] += this.parseTypeForm(data[key][form], form) ?? \"\";\n\n            }\n        }\n\n        console.log(this.actualSettings[\"bulb\"]);\n        console.log(this.actualSettings[\"autofocusdrive\"]);\n\n        console.log(\"renderSettingsPage\");\n        this.addForms();\n\n\n    }\n\n\n    constructor(data, tabsLinkId = \"#md-header\", tabsContentId = \"#myTabContent\") {\n        //console.log(\"constructor settigs\");\n\n    }\n\n\n    __safeGetId(collection) {                              //перенести в utils\n        var safeCollection = {};\n        for (let elem in collection) {\n            safeCollection[replaceSpace(elem)] = collection[elem][\"value\"];\n        }\n        return safeCollection;\n    }\n\n    renderImportantSettingPage(data, idBlockSetting = \"#importantSettings_body\") {\n        console.log(\"test\");\n\n        // this.actualImportantSettings = data.map((key) => { replaceSpace(key) });\n\n        this.actualImportantSettings = this.__safeGetId(data);\n        let htmlSetting = \"\";\n        for (let widget in data) {\n            console.log(widget);\n            if (widget != 'coeff_resize' && widget != 'coeff_compress') {\n                htmlSetting += this.parseTypeForm(data[widget], widget, \"_important\");\n            }\n        }\n\n        $(idBlockSetting).html(htmlSetting);\n        this.addChangeEvent();\n\n\n    }\n\n\n     addChangeEvent(idBlock) {\n        var _this = this;\n        // var url = this._Camera.__makeUrl(\"settings\");\n       // var ajaxPromise = this._Camera.__executeAjax()\n        // var dfd = new $.Deferred();\n\n        $(\"#importantSettings_body  select\" )\n            .change(async function ()  {\n                console.log(\"test\");\n                var val = $( this ).val();\n                var nameSett = $( this ).attr('id');\n\n\n                \n                // var ajaxQuery = _this._bindFunc['promiseQuery'];\n                try {\n                    var ajaxQuery = await _this._Camera.__executeAjaxPromise((\"settings\"), {\n                        [nameSett.split('_')[0]] : val,\n                    }, 'POST');\n\n                    var data = await _this._Camera.__executeAjaxPromise('important', {  \n                    }, \"GET\");\n\n                    _this._Camera.bindFnc['show_alert'](`${nameSett.split('_')[0]} = ${val}`)();\n                    _this.renderImportantSettingPage(data);\n                    console.log(\"tyt\");\n                } catch (error) {\n                    alert(error.responseText);\n\n                } \n\n               \n                \n                // console.log(data);\n\n\n                // var promiseUpdateSet =  await ajaxQuery('settings', \n                //     {[nameSett] : val}, 'post');\n            })\n        // return dfd.promise();\n        };\n                \n\n\n\n\n        // $(\"input, select\", '#importantSettings_body').change(() => {\n        //     console.log($( this ).val());\n        // })\n\n\n\n\n\n    renderTabsHtml(data) {\n        let outputTabsHtml = `<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">`;\n        let outputTabContentHtml = \"\"\n\n        let it = 0;\n        for (let key in data) {\n            outputTabContentHtml += `\n            <div class=\"tab-pane fade ${it == 0 ? \"show active\" : \"\"}\" id=\"${labelToId(key)}\" role=\"tabpanel\" aria-labelledby=\"Camera Settings (settings)\">\n                <h1>${(key)}</h1>\n            </div>`\n\n            outputTabsHtml += ` \n            <li class=\"nav-item\" role=\"presentation\"> \n                <button class=\"nav-link ${it == 0 ? \"active\" : \"\"}\"\" id=\"${it++}\" data-bs-toggle=\"tab\" data-bs-target=\"#${key.slice(key.indexOf('(') + 1, key.indexOf(')'))}\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">${key}</button>\n            </li>\n            `\n        }\n        outputTabsHtml += `</ul>>`;\n\n        return [outputTabsHtml, outputTabContentHtml];\n\n    }\n\n\n    bindFunc(nameFunc, func) {\n        this._bindFunc[nameFunc] = func;\n\n    }\n\n\n    editImportantSettings() {\n        var selectSettings = [];\n        $(\"input, select\", '#importantSettings_body').each(function (index) {\n            let id = $(this).attr(\"id\");\n            if ($(this).val() === null) {\n                selectSettings[id.split(\"_\")[0]] = 0;\n            }\n            else if ($(this).attr(\"type\") == \"checkbox\") {\n                //selectSettings[id] = $( this ).prop('checked') + 1;\n\n            } else {\n                selectSettings[id.split(\"_\")[0]] = $(this).val();\n            }\n        });\n\n        var diff = this.findСhangedInput(selectSettings, this.actualImportantSettings);\n        return diff;\n    };\n\n\n\n    parseCurrSettings() {\n\n        let searchFormClass = [\n            \"input\",\n            \"select\",\n\n        ];\n        //let currSettings = {};\n        let selectSettings = {};\n\n        $(\"input, select\", '.modal-content').each(function (index) {\n            let id = $(this).attr(\"id\");\n            if ($(this).val() === null) {\n                selectSettings[id] = 0;\n            }\n            else if ($(this).attr(\"type\") == \"checkbox\") {\n                console.log(\"test1\");\n                selectSettings[id] = +$(this).prop('checked');\n\n            }\n             else {\n                selectSettings[id] = $(this).val();\n            }\n        }\n        )\n\n\n        let changedSettings = this.findСhangedInput(selectSettings, this.actualSettings);\n        return changedSettings;\n        //return currSettings;\n\n    };\n\n\n\n\n\n\n\n\n    addForms() {\n        for (let id in this.bind) {\n            $(`#${id}`).html(this.bind[id]);\n            //console.log(this.bind[id]);\n        }\n        //console.log(\"addForms\");\n\n        //console.log(this.actualSettings)\n    }\n\n\n\n    parseTypeForm(form, nameForm, prefixId = \"\") {\n        if (form.type == \"ToggleWidget\") {\n            return this.getFormToggle(form, nameForm, prefixId);\n        }\n\n        else if (form.type == \"RangeWidget\") {\n            return this.getFormRange(form, nameForm, prefixId);\n        }\n\n        else if (form.type == \"TextWidget\") {\n            return this.getFormText(form, nameForm, prefixId);\n        }\n\n        else if (form.type == \"RadioWidget\" || form.type == \"MenuWidget\") {\n            return this.getFormMenu(form, nameForm, prefixId);\n        }\n        else if (form.type == \"Date\") {\n            return this.getFormDate(form, nameForm, prefixId);\n        }\n\n    }\n\n\n    addOptionTags(form) {\n        let add_tags = \"\"\n        add_tags += form.isReadOnly == 1 ? \"disabled\" : \"\";\n        add_tags += form.value != 0 ? \" checked \" : \"\";\n        return add_tags;\n        // let str = form.isReadOnly == 1 ? \"disabled\" : \"\"\n        // ${form.isReadOnly == 1 ? \"disabled\" : \"\"} ${form.value != 0 ? \"checked\" : \"\"\n    }\n\n    getFormToggle(form, nameForm, prefixId) {\n        let html = \"\";\n        html += `<div class='input_toggle form-group row'>`;                                // <div class=\"form-check\"> </div>  \n        html += `\n       \n            \n            <label class=\"col-form-label col-sm-4\" for=\"${replaceSpace(nameForm) + prefixId}\">\n                ${form[\"label\"]} :  \n            </label>\n\n            <div class=\"col-sm-8\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"${form[\"value\"]}\" id=\"${replaceSpace(nameForm) + prefixId}\" ${this.addOptionTags(form)}>\n            </div>\n        \n        `;\n        //console.log(\"test\");\n        //console.log(html);\n        html += `</div>`;\n        return html;\n    }\n\n    getFormDate(form, nameForm, prefixId) {\n        let html = \"\";\n        form.value = this.timeConverter(form.value);\n        return this.getFormText(form, nameForm, prefixId);\n\n\n    }\n\n\n\n\n    timeConverter(UNIX_timestamp) {\n        var a = new Date(UNIX_timestamp * 1000);\n        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        var year = a.getFullYear();\n        //var month = months[a.getMonth()];\n        var month = a.getMonth()\n        var date = a.getDate();\n        var hour = a.getHours();\n        var min = a.getMinutes();\n        var sec = a.getSeconds();\n        var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n        return time;\n\n    }\n\n    getFormRange(form, nameForm, prefixId) {\n        let html = \"\";\n        html = \"<div class='input_range form-group row'>\";\n\n        html += `\n            <label for=\"${replaceSpace(nameForm) + prefixId}\" class=\"col-form-label col-sm-4\">${form[\"label\"]}</label>\n            <div class=\"col-sm-8\">\n                <input type=\"range\" class=\"form-range\" value=\"${form.value}\" min=\"${form.range[0]}\" max=\"${form.range[1]}\" step=\"${form.range[2]}\" id=\"${replaceSpace(nameForm) + prefixId}\"  ${this.addOptionTags(form)}>\n            </div>\n                `;\n        html += `</div>`;\n        //console.log(\"test\");\n        //console.log(html);\n        return html;\n    }\n\n    getFormText(form, nameForm, prefixId) {\n        let html = \"<div class='input_text form-group row'>\";\n        html += `<label for=\"${replaceSpace(nameForm) + prefixId}\" class=\"col-form-label col-sm-4\">${form[\"label\"]}</label>`;\n        html += `\n        <div class=\"col-sm-8\">\n            <input class=\"form-control\" type=\"text\" value=\"${form.value}\" placeholder=\"Disabled input\" id=\"${replaceSpace(nameForm) + prefixId}\" aria-label=\"Disabled input example\" ${this.addOptionTags(form)}></input>\n        </div>\n        \n            `\n        html += `</div>`\n        //console.log(\"test\");\n        //console.log(html);\n        return html;\n    }\n\n\n    findСhangedInput(allSelectedInput, actualSettings) {\n        let changedInput = {};\n\n        for (let key in allSelectedInput) {\n            if (key == \"datetime\" || key == \"flashexposurecompensation\" || key == \"thumbsize\") {\n                continue;\n            }\n            if (allSelectedInput[key] != actualSettings[key] && actualSettings[key] != undefined) {\n                //console.log(\"test12\");\n                //console.log(key + \" : \" + allSelectedInput[key] + \" : \" + this.actualSettings[key]);\n\n                changedInput[key] = allSelectedInput[key];\n\n            }\n        }\n\n\n        //console.log(changedInput);\n        return changedInput;\n\n    }\n\n\n\n    getFormMenu(form, nameForm, prefixId) {\n        let html = `<div class=\"input_menu form-group row\">`;\n        html += `<label for=\"${replaceSpace(nameForm) + prefixId}\" class=\"col-form-label col-sm-4\">${form[\"label\"]}</label>`;\n        html += `\n        <div class=\"col-sm-8\">\n            <select id=\"${replaceSpace(nameForm) + prefixId}\" class=\"form-select\" value=${form.value} aria-label=\"Default select example\"> ${this.addOptionTags(form)}`;\n        form.choice.forEach(choice => {\n            if (choice == form.value) {\n                html += `<option selected> ${choice} </option>`;\n            } else {\n                html += `<option value=\"${choice}\">${choice}</option>`;\n            }\n        });\n\n        html += `</select>`;\n        html += `</div>`;\n        html += `</div>`;\n        //console.log(\"test\");\n        //console.log(html);\n        return html;\n    }\n\n\n}\n\n\n\nconst labelToId = (str) => {\n\n    // str = str.replace(/ /g, \"_\");\n    // str = str.replace(/[()]/g, \"\");\n    // //console.log(str)\n\n    // let resStr = str.slice(str.indexOf('('), str.indexOf(')'));\n    // //console.log(\"start test\");\n    // //console.log(resStr);\n\n\n\n    return str.slice(str.indexOf('(') + 1, str.indexOf(')'));\n\n}\n\n\nconst replaceSpace = (str) => {\n\n    // str = str.replace(/ /g, \"_\");\n    // str = str.replace(/[()]/g, \"\");\n    // //console.log(str)\n\n    // let resStr = str.slice(str.indexOf('('), str.indexOf(')'));\n    // //console.log(\"start test\");\n    // //console.log(resStr);\n\n\n\n    //return str.slice(str.indexOf('(') + 1, str.indexOf(')'));\n\n    return str;\n}\n\n//# sourceURL=webpack:///./dashboard/scripts/SettingsCamera.js?");

/***/ }),

/***/ "./dashboard/scripts/drag.js":
/*!***********************************!*\
  !*** ./dashboard/scripts/drag.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imgSelections\": () => (/* binding */ imgSelections)\n/* harmony export */ });\n\n// import { utils } from \"./utils\";\n\n// import { util } from \"webpack\";\n\n\n// import { Utils } from \"./utils\";\n\n\n\nconst imgSelections = (idAddEvent, panzoom, connectToCamera, renderImgByBase64, ctx) => {\n\n\n\n    console.log(connectToCamera);\n    console.log(\"utils _________________-- ______________\");\n\n    // function getDataByCoord (json, connectToCamera) {\n\n\n\n\n\n        \n    // }\n\n\n\n    \n    // var connectToCamera = null;\n    \n    // console.log(utils.ip_addr);\n    console.log(\"drag.js\");\n    var imgCrop = {};\n\n    var activeImage = null, startX = 0, startY = 0,\n        activeSelection = document.createElement('div'),\n        html = document.documentElement,\n        body = document.body,\n        imgs = $(idAddEvent);\n        //imgs = document.getElementsByTagName('img');\n\n    activeSelection.style.cssText = \"position:absolute; line-height:0; font-size:0; z-index: 100;\" +\n        \"background-color:#0f0; opacity: 0.3; filter:Alpha(opacity=30)\";\n\n    function msgBox(content, x, y, w, h, json) {\n        \n        var img = activeImage,\n            rect = img.getBoundingClientRect(),\n            box = document.createElement('div'),\n            bg = document.createElement('div'),\n            close = document.createElement('div'),\n            win = document.createElement('div');\n\n        win.setAttribute(\"id\", \"select_img_box\");\n\n        box.style.cssText = \"z-index: 100; position: absolute; width: \" +\n            (rect.right - rect.left) + \"px; height: \" +\n            (rect.bottom - rect.top) + \"px;\" +\n            \"top: \" + img.offsetTop + \"px;\" +\n            \"left: \" + img.offsetLeft + \"px\";\n\n        bg.style.cssText = \"background-color: #000; opacity: 0.3; filter: Alpha(opacity=30);\" +\n            \"position: absolute; width: 100%; height: 100%;\";\n\n        close.style.cssText = \"position: absolute; top: 0; right: 0; margin: 2px 7px 0 0; font: 14px Tahoma; \" +\n            \"color: red; cursor: pointer; font-weight: bold;\";\n        close.innerHTML = \"x\";\n        \n        close.onclick = function () {\n            img.parentNode.removeChild(box);\n        }\n\n\n\n        \n\n        win.style.cssText = \"padding: 15px; width:310px; height:310px;position: fixed; background-color: #fff;\" +\n            \"left: \" + 50 + \"%; \" +\n            \"top: \" + 60 + \"%;\" +\n            \"border-radius: 10px; box-shadow: 2px 2px 4px #000;\";\n            // (w ? 'width: ' + w + 'px;' : '') + (h ? 'height: ' + h + 'px;' : '');\n\n\n    \n\n        win.innerHTML = content;\n        \n        box.appendChild(bg);\n        box.appendChild(win);\n        win.appendChild(close);\n        activeImage.parentNode.insertBefore(box, img);\n\n\n\n\n\n        $(\"#select_img_box\").append(\n            '<button type=\"button\" id=\"image_selected_btn\" style=\"margin-top:12px;\" class=\"btn btn-success\">Получить</button>'\n        );\n    \n\n\n\n        $(\"#image_selected_btn\").click(async (ev) => {\n\n\n\n            json[\"width_img\"] = $(\"#img_panzoom\").width();\n            json[\"height_img\"] = $(\"#img_panzoom\").height();\n            // var nameImg = json[\"img_name\"].split(\"/\");\n            // nameImg = \"file/\" + nameImg[nameImg.length - 1];\n            // var nameImg = json[\"img_name\"].split(\"/\");\n            // nameImg = \"file/\" + nameImg[nameImg.length - 1];\n            var nameImg = $(\"#img_panzoom\").attr(\"img_name\");\n            json[\"img_name\"] = nameImg;\n            //var nameImg = $()\n            // var URL = connectToCamera.endpoint + \"/\" + \"file\" + \"/\" + nameImg;\n\n            // var c = document.getElementById(\"img_panzoom\");\n            // var ctx = c.getContext(\"2d\");\n            // var imageObj1 = new Image();\n\n\n\n            console.log(connectToCamera.endpoint);\n            \n            var data = await connectToCamera.__executeAjaxPromise(\"file/\" + nameImg, json, \"GET\");\n            \n            \n            console.log(data);\n            img.parentNode.removeChild(box);\n\n            \n\n\n            var renderImg2 = (str, ctx) => {\n\n                var imageObj1 = new Image();\n                console.log(\"img_____ crop ___\");\n                console.log(imgCrop);\n                // var imageObj2 = new Image();\n                console.log(\"renderImg2\");\n                console.log(ctx);\n                console.log(str);\n                // $(\"#img_panzoom\").attr('width', 4000 + 'px');\n                // $(\"#img_panzoom\").attr('height', 2000 + 'px');\n                $(\"#img_panzoom\").attr('img_name', str.name);\n\n                imageObj1.src = str.urlImgResize;\n                console.log(imageObj1.src);\n\n                imageObj1.onload = function() {\n                    ctx.drawImage(imageObj1, imgCrop.X, imgCrop.Y, imgCrop.W, imgCrop.H);\n                }\n\n\n            }\n\n            renderImg2(data, ctx);\n\n            \n\n\n            // renderImgByBase64(data);\n\n\n\n\n\n\n\n            // console.log(\"data____________test\");\n\n\n            console.log(data);\n            \n            // console.log(nameImg);\n            // console.log(\"test_______________test____________--\");\n            // console.log(json);\n\n\n\n            // getDataByCoord(json, connectToCamera);\n            // console.log(\"image_selected_btn\");\n        })\n        \n\n        \n\n\n        // win.appendChild(btn);\n\n\n\n\n        var ml = win.offsetWidth / 2;\n        var mt = win.offsetHeight / 2;\n\n        ml = win.offsetLeft - ml < 0 ? win.offsetLeft : ml;\n        ml = (win.offsetLeft - ml) + win.offsetWidth > rect.right - rect.left ?\n            win.offsetWidth - (rect.right - rect.left - win.offsetLeft) : ml;\n\n        mt = win.offsetTop - mt < 0 ? win.offsetTop : mt;\n        mt = (win.offsetTop - mt) + win.offsetHeight > rect.bottom - rect.top ?\n            win.offsetHeight - (rect.bottom - rect.top - win.offsetTop) : mt;\n\n        win.style.margin = \"-\" + mt + \"px 0 0 -\" + ml + \"px\";\n\n\n\n    }\n\n    function shiftScroll() {\n        return {\n            X: (html && html.scrollLeft || body && body.scrollLeft || 0),\n            Y: (html && html.scrollTop || body && body.scrollTop || 0)\n        }\n    }\n\n    function fixEvent(e) {\n\n        e = e || window.event;\n\n        if (e.pageX == null && e.clientX != null) {\n            e.pageX = e.clientX + shiftScroll().X - (html.clientLeft || 0);\n            e.pageY = e.clientY + shiftScroll().Y - (html.clientTop || 0);\n        }\n\n        if (!e.which && e.button) {\n            e.which = e.button & 1 ? 1 : (e.button & 2 ? 3 : (e.button & 4 ? 2 : 0));\n        }\n\n        return e;\n    }\n\n    for (var i = 0; i < imgs.length; i++) {\n        \n\n\n        imgs[i].onselectstart = imgs[i].ondragstart = function () {\n            return false;\n        }\n\n        imgs[i].onmousedown = function (e) {\n            console.log(\"onmousedown\");\n            e = fixEvent(e);\n\n            activeImage = e.target || e.srcElement;\n            body.insertBefore(activeSelection, body.firstChild);\n\n            startX = e.pageX;\n            startY = e.pageY;\n\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        }\n    }\n\n    // document.onmousedown = function (e) {\n    //     console.log(\"test1234\");\n\n    // }\n\n    document.onmouseup = function (e) {\n        if (!e.ctrlKey) {\n            console.log(\"ctrlKey\");\n            return;\n        }\n\n\n        // console.log(Utils.ip_addr);\n\n\n        if (activeImage) {\n            console.log(\"onmouseup\");\n\n\n            e = fixEvent(e);\n\n            var iRect = activeImage.getBoundingClientRect();\n            var sRect = activeSelection.getBoundingClientRect();\n\n            var shift = shiftScroll();\n            var X = (sRect.left + shift.X < startX ? sRect.left + shift.X : startX) - iRect.left - shift.X;\n            var Y = (sRect.top + shift.Y < startY ? sRect.top + shift.Y : startY) - iRect.top - shift.Y;\n\n\n            var {x, y} = panzoom.getPan();\n            var scale = panzoom.getScale();\n\n            imgCrop.X = X / scale;\n            imgCrop.Y =  Y / scale;\n            imgCrop.scale = scale;\n            imgCrop.W = activeSelection.offsetWidth / scale;\n            imgCrop.H =  activeSelection.offsetHeight / scale;\n            // тут что-то открываем, делаем\n            // ....\n            msgBox([\n                \"src: \" + activeImage.src + \"<br />\",\n                \"X: \" + X,\n                \"Y: \" + Y,\n                \"W: \" + activeSelection.offsetWidth / scale,\n                \"H: \" + activeSelection.offsetHeight / scale,\n                \"Panzoom(x y) : \" + Math.floor(x) + \",\" + Math.floor(y),\n                \"Scale: \" + scale,\n                \"X / Scale: \" + X / scale,\n                \"Y / Scale: \" + Y / scale,\n                \n\n            ].join(\"<br />\"),\n                startX > e.pageX ? X : X + activeSelection.offsetWidth,\n                startY > e.pageY ? Y : Y + activeSelection.offsetHeight,\n                300\n            , 10, {\n                \"img_name\" : activeImage.src,\n                \"is_crop\" : true, \n                \"X_abs\" : X / scale,\n                \"Y_abs\" : Y / scale,\n                \"W\" : activeSelection.offsetWidth / scale,\n                \"H\" : activeSelection.offsetHeight / scale,\n                        \n                    \n            });\n            // ------------------------------\n\n            if (activeSelection.parentNode) {\n                activeSelection.parentNode.removeChild(activeSelection);\n                activeSelection.style.width = \"0\";\n                activeSelection.style.height = \"0\";\n            }\n\n            activeImage = null;\n        }\n    }\n    \n    document.onmousemove = function (e) {\n        if (!e.ctrlKey) {\n            console.log(\"ctrlKey\");\n            return;\n        }\n        if (activeImage) {\n            e = fixEvent(e);\n\n            var shift = shiftScroll();\n            var rect = activeImage.getBoundingClientRect();\n\n            var X = Math.max(e.pageX > startX ? startX : e.pageX, rect.left + shift.X);\n            var Y = Math.max(e.pageY > startY ? startY : e.pageY, rect.top + shift.Y);\n            var W = Math.min(Math.abs(Math.max(X, e.pageX) - startX), rect.right + shift.X - X);\n            var H = Math.min(Math.abs(Math.max(Y, e.pageY) - startY), rect.bottom + shift.Y - Y);\n\n            activeSelection.style.left = X + \"px\";\n            activeSelection.style.top = Y + \"px\";\n            activeSelection.style.width = W + \"px\";\n            activeSelection.style.height = H + \"px\";\n        }\n    }\n}\n\n\n\n//# sourceURL=webpack:///./dashboard/scripts/drag.js?");

/***/ }),

/***/ "./dashboard/scripts/main.js":
/*!***********************************!*\
  !*** ./dashboard/scripts/main.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ConnectToCamera_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ConnectToCamera.js */ \"./dashboard/scripts/ConnectToCamera.js\");\n/* harmony import */ var _SettingsCamera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingsCamera.js */ \"./dashboard/scripts/SettingsCamera.js\");\n/* harmony import */ var _drag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drag.js */ \"./dashboard/scripts/drag.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"./dashboard/scripts/utils.js\");\n\n\n\n\n\n\n\n\n\nvar CONFIG = {\n    \"id_main_table\"  : \"#tbody_info_files\",                               //Таблица с информацией о файлах\n    \"id_image_wrapp\" : \"#wrapper_img_from_camera\"                        //Блок для отрисовки фотографии\n}\n\n\n\n\nconst ID_PARENT_INFO_TABLE    = \"#tbody_info_file\";\nconst ID_MODAL_CONFIRM_ACTION = \"#exampleModalCenter\";\n\n\n\n\nvar c              = document.getElementById(\"img_panzoom\");\nvar ctx            = c.getContext(\"2d\");\nvar utils          = new _utils_js__WEBPACK_IMPORTED_MODULE_3__.Utils();\nvar cameraObj      = new _ConnectToCamera_js__WEBPACK_IMPORTED_MODULE_0__.ConnectToCamera(ctx);\nvar settingsCamera = new _SettingsCamera_js__WEBPACK_IMPORTED_MODULE_1__.SettingsCamera();\nvar imageObj       = new Image();\nvar panzoom        = null;\n\n\n\n\n\n\n\n\n\nconst htmlForDropdownAction = (id) => {\n    return `\n    <div class=\"btn-group\">\n        <button type=\"button\" class=\"btn btn-success\">Действие</button>\n        <button type=\"button\" class=\"btn btn-success dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n        <span class=\"visually-hidden\">Переключатель выпадающего списка</span>\n        </button>\n        <ul class=\"dropdown-menu\">\n            <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                    <button class=\"nav-link px-3 control_button btn btn-warning\" id=\"${id}:del\">del</button>\n            \n                </a>\n            </li>\n            <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                    <button style=\"color:white\" class=\"nav-link px-3 control_button btn btn-primary\" id=\"${id}:get\">get</button>\n                </a>\n            </li>\n            <li><a class=\"dropdown-item\" href=\"#\">Что-то еще здесь</a></li>\n            <li><hr class=\"dropdown-divider\"></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Отделенная ссылка</a></li>\n        </ul>\n  </div>\n    `\n}\n\nconst sortInputData = (data) => {\n\n\n\n\n}\n//  <td><button class=\"nav-link px-3 control_button btn btn-warning\" id=\"${img}:del\">del</button></td>\n// <td><button style=\"color:white\" class=\"nav-link px-3 control_button btn btn-primary\" id=\"${img}:get\">get</button> </td>\n//\n\nlet renderRowTableFileInfo = (parent, dict) => {                      //\n    var img = dict.name;\n    var path = dict.path;\n    var image_dimensions = dict.info.image_dimensions;\n    var image_type = dict.info.image_type;\n    var file_mtime = dict.info.file_mtime;\n\n\n    parent.prepend(` \n        <tr id='${fullNameToId(img)}'>\n            <td> ${img} </td>\n            <td> ${path} </td>\n            <td> ${image_dimensions} </td>\n            <td> ${image_type} </td>\n            <td> ${file_mtime} </td>\n          \n            <td> ${htmlForDropdownAction(img)} </td>\n\n        </tr> \n    `)\n}\n\nlet addModalForBtn = (idBtn = \"#settings_page\", divModal = \"#settings-path\") => {\n    $(idBtn).click((el) => {\n        $(divModal).modal('toggle');\n    })\n    // $(\"settings-path\")\n}\n\n\n\n\n\nconst renderImgByBase64 = (str) => {\n   \n    // ctx.clearRect(0, 0, c.width, c.height);\n    console.log(str);\n    \n    $(\"#wrapper_img_from_camera\").css('max-height', (window.innerHeight - 10) + \"px\")\n    $(\"#img_panzoom\").attr('width', str.width + 'px');\n    $(\"#img_panzoom\").attr('height', str.height + 'px');\n    // str.name == undefined \n    $(\"#img_panzoom\").attr('img_name', 'name' in str ?  str[\"name\"] : str[\"nameResizeFile\"]);\n\n    imageObj.src = str.urlImgResize;\n    console.log(str);\n\n    imageObj.onload = function() {\n        ctx.drawImage(imageObj, 0, 0);\n        panzoom.zoom(0.1);\n\n\n    }\n    // $(\"#img_panzoom\").attr(\"src\", `${str.urlImgResize}`);\n\n    \n    // $(\"#img_panzoom\").attr('height', '1000px')\n    // alert(\"\");\n    //$(\"#img_panzoom\").attr(\"src\",`data:image/png;base64,${str.base64_file}`);\n    //$(\"#prew_img\").attr(\"src\",`${str.urlImgPreview}`);\n\n    // $(\"#full_img_container\").html(`<img id=\"img_panzoom\" src=\"data:image/png;base64,${str.base64_file}\"> </img>`);\n    // $(\"#prew_img\").html(`<img src=\"data:image/png;base64,${str.base64_prev}\"> </img>`);\n\n\n    // $(\"#prew_img\").empty();\n    // $(\"#prew_img\").append(imagePreview);\n\n\n\n};\n\n\nconst addChangeEvent = (idBlock) => {\n\n    var dfd = new $.Deferred();\n\n    $(\"select\")\n        .change(function () {\n            var str = \"\";\n            console.log($(this).val());\n\n\n            let id = $(this).attr('id');\n            let val = $(this).val();\n\n            cameraObj.__executeAjax('settings', console.log, {\n                id: val\n            }, 'POST');\n\n            return dfd.resolve({ id: val });\n        })\n    return dfd.promise();\n};\n\n\n\nconst addActionZoomBtn = (elem) => {\n    console.log(\"test123\");\n    $(\"#zoom_in_btn\").off();                     //Удаляем старые события\n    $(\"#zoom_out_btn\").off();\n    $(\"#reset_btn\").off();\n    $(\"#range_input\").off();\n    $(\"#select_img_box\").click( (ev) => {\n        console.log(\"OK\");\n    })\n\n    var elem = document.getElementById(\"img_panzoom\");\n    \n   \n    panzoom = Panzoom(elem, {\n\n        // handleStartEvent: () => {},\n        canvas: true,\n        noBind: true,\n        contain: 'outside', \n        autocenter: true, \n        bounds: true,\n        maxScale: 10,\n        minScale: 0.1,\n        startScale: 0.1,\n\n        step: 0.3,\n\n\n    });\n\n    const parent = elem.parentElement;\n    \n\n    // parent.addEventListener('wheel', function (event) {\n    //     if (!event.shiftKey) return;\n    //     panzoom.zoomWithWheel(event);\n    // });\n\n    parent.parentElement.addEventListener('wheel', panzoom.zoomWithWheel)\n  \n\n    \n\n    elem.addEventListener('pointerdown', (event) => {\n        if (event.ctrlKey) return;\n        console.log(event)\n        panzoom.handleDown(event)\n      })\n\n    \n    // document.getElementById('img_panzoom').contentEditable=true;\n    // document.getElementById('inner').focus();\n\n\n    document.addEventListener('keyup', (function(e) {\n\n\n\n\n        console.log(document.hasFocus());\n        //console.log(Document.activeElement);\n        if (e.key === 'w') {\n            e.preventDefault();\n            console.log(\"test\");\n            panzoom.zoomIn();\n        }\n\n        else if (e.key === 's') {\n            e.preventDefault();\n            console.log(\"test\");\n            panzoom.zoomOut();\n        }\n\n\n        // else if (e.key === 'ArrowLeft') {\n        //     panzoom.\n        //     console.log(\"test\");\n\n        //     panzoom.zoomOut();\n        // }\n\n\n\n    }));\n    \n    document.addEventListener('pointermove', panzoom.handleMove)\n    document.addEventListener('pointerup', panzoom.handleUp)\n    ;(0,_drag_js__WEBPACK_IMPORTED_MODULE_2__.imgSelections)(\"#img_panzoom\", panzoom, cameraObj, renderImgByBase64, ctx);\n\n    // $(\"#img_panzoom\").dblclick((e) => {\n    //     if (isZoom) {\n    //         isZoom = !isZoom;\n    //         $(\"img_panzoom\").off();\n    //         panzoom.pause(); \n    //         imgSelections(\"#img_panzoom\");\n\n    //     } else {\n    //         console.log(\"isZoom\" + isZoom);\n\n    //     }\n\n\n    //     console.log(\"dblclick\");\n\n    // });\n\n    \n\n\n    \n\n\n   \n    // panzoom.zoom(0.5);\n\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n\n\n    // function zoom(scale, isSmooth) {\n    //     if (scale) {\n    //         var transform = controller.getTransform();\n    //         var deltaX = transform.x;\n    //         var deltaY = transform.y;\n    //         var offsetX = scale + deltaX;\n    //         var offsetY = scale + deltaY;\n\n    //         if (isSmooth) {\n    //             controller.smoothZoom(offsetX, offsetY, scale);\n    //         } else {\n    //             controller.zoomTo(offsetX, offsetY, scale);\n    //         }\n    //     }\n    // }\n\n\n    // let zoomInButton = document.getElementById(\"zoom_in_btn\");\n    //let zoomOutButton = document.getElementById(\"zoom_out_btn\");\n    // let resetButton = document.getElementById(\"reset_btn\");\n    // let rangeInput = document.getElementById(\"range_input\");\n\n\n    // zoomInButton.addEventListener('click', panzoom.zoomIn);\n    //zoomOutButton.addEventListener('click', panzoom.zoomOut);\n    // resetButton.addEventListener('click', panzoom.reset);\n    // rangeInput.addEventListener('input', (event) => {\n    //     panzoom.zoom(event.target.valueAsNumber);\n    // });\n\n    // panzoom.on('pan', function(e) {\n    //     console.log('Fired when the `element` is being panned', e);\n    //   });\n\n    //   panzoom.on('panend', function(e) {\n    //     console.log('Fired when pan ended', e);\n    //   });\n\n    //   panzoom.on('zoom', function(e) {\n    //     console.log('Fired when `element` is zoomed', e);\n    //   });\n\n    //   panzoom.on('zoomend', function(e) {\n    //     console.log('Fired when zoom animation ended', e);\n    //   });\n\n    //   panzoom.on('transform', function(e) {\n    //     // This event will be called along with events above.\n    //     console.log('Fired when any transformation has happened', e);\n    //   });\n\n\n    // $(\"#zoom_in_btn\").one('click', panzoom.zoomIn)\n    // $(\"#zoom_out_btn\").one('click', panzoom.zoomOut)\n    // $(\"#reset_btn\").one('click', panzoom.reset)\n\n    // Array.from(\n    //     document.querySelectorAll('.buttons .btn_panzoom')\n    //   ).forEach(attachClickHandler)\n\n    //   function attachClickHandler(el) {\n    //     el.addEventListener('click', handleClick);\n    //   }\n\n    //   function handleClick(e) {\n    //     e.preventDefault();\n    //     let container = document.querySelector('#wrapper_img_from_camera');\n    //     let rect = container.getBBox();\n    //     let cx = rect.x + rect.width/2;\n    //     let cy = rect.y + rect.height/2;\n    //     let isZoomIn = e.target.id === 'zoom_in_btn';\n    //     let zoomBy = isZoomIn ? 2 : 0.5;\n    //     pz.smoothZoom(cx, cy, zoomBy);\n    //     // Or if you don't need animation, usee this:\n    //     // pz.zoomTo(cx, cy, zoomBy);\n    // }\n\n\n\n\n\n};\n\nconst activePage = () => {\n    showAlert(\"test\");\n    $(\"#connect_to_camera\").html(\"Активно\");\n    $(\"#connect_to_camera\").css(\"background-color\", \"mediumspringgreen\");\n    $(\"#connect_to_camera\").css(\"color\", \"purple\");\n\n\n\n\n\n};\n\nconst fullNameToId = (nameFile) => {\n    let posFirstChar = nameFile.indexOf('_');\n    let posSecondChar = nameFile.indexOf('.');\n    let subStr = nameFile.substring(posFirstChar + 1, posSecondChar);\n    return subStr;\n}\n\n\n\nconst delRowByName = (nameFIle) => {\n\n    let id = fullNameToId(nameFIle);\n    let removeBlock = \"#\" + id;\n    ////console.log($(removeBlock))\n    $(removeBlock).remove();\n\n\n\n\n}\n\n\nconst callbackClickControlButton = (event) => {\n\n\n    var [nameFile, typeAction] = event.target.id.split(\":\");\n    ////console.log(nameFile + \"::\" + typeAction);\n\n    switch (typeAction) {\n        case \"get\":\n\n            $('#exampleModalCenter').modal('toggle');\n\n\n            $('#get_photo').click((test) => {\n                let inputCoeffResize = $(\"#inputResizeImg\").val();\n\n                let inputCoeffCompress = $(\"#inputCoeffCompress\").val();\n                cameraObj.getImgByName(nameFile, renderImgByBase64, inputCoeffResize, inputCoeffCompress);\n                ////console.log(nameFile);\n                $('#get_photo').off();\n                $('#exampleModalCenter').modal('toggle');\n            });\n            break;\n        case \"del\":\n            cameraObj.delFileByName(nameFile, delRowByName);\n            break;\n        default:\n            break;\n    }\n\n\n};\n\n\nconst addImginfoToTable = (dict) => {\n    var block = $(\"#tbody_info_files\");\n    console.log(dict);\n    renderImgByBase64(dict);\n    renderRowTableFileInfo(block, dict);\n\n    AddActionOnBtnControll();\n}\n\n\nconst AddActionOnBtnControll = () => {\n\n    let aButtons = $(\".control_button\");\n    aButtons.off();\n    aButtons.click(callbackClickControlButton);\n}\n\n\nconst sync = (data) => {\n    let el = renderMetadataAllFiles;\n    el(data);\n}\n\nconst renderModalBody = (data) => {\n\n\n    let outputHtml = 0;\n\n\n}\nconst replaceSpace = (str) => {\n\n    // str = str.replace(/ /g, \"_\");\n    // str = str.replace(/[()]/g, \"\");\n    // //console.log(str)\n\n    let resStr = str.slice(str.indexOf('('), str.indexOf(')'));\n    // //console.log(\"start test\");\n    // //console.log(resStr);\n    return str.slice(str.indexOf('(') + 1, str.indexOf(')'));\n}\n\n\n\nconst renderMetadataAllFiles = (data) => {\n    $(\".control_button\").remove();\n    let outputHtm = \"\";\n    var parent = $(\"#tbody_info_files\");\n    parent.empty();\n\n\n    for (var img in data) {\n        let tmp_obj = data[img];\n        tmp_obj.name = img;\n        renderRowTableFileInfo(parent, tmp_obj);\n    }\n    data = null;\n    parent = null;\n    AddActionOnBtnControll();\n\n};\n// \"free_space_odroid\" : {\n//     \"type\" : 'byte',\n//     \"total\" : disck_info.total,\n//     \"used\" : disck_info.used,\n// }\nconst GBYTES_TO_BYTES = 1073741824;\n\n// const renderTabsHtml = (data) => {\n//     let outputTabsHtml = `<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">`;\n//     let outputTabContentHtml = \"\"\n\n//     let it = 0;\n//     for (let key in data) {\n//         outputTabContentHtml += `\n//         <div class=\"tab-pane fade ${it == 0 ? \"show active\" : \"\"}\" id=\"${replaceSpace(key)}\" role=\"tabpanel\" aria-labelledby=\"Camera Settings (settings)\">\n//             <h1>${(key)}</h1>\n//         </div>`\n\n//         outputTabsHtml += ` \n//         <li class=\"nav-item\" role=\"presentation\"> \n//             <button class=\"nav-link ${it == 0 ? \"active\" : \"\"}\"\" id=\"${it++}\" data-bs-toggle=\"tab\" data-bs-target=\"#${replaceSpace(key)}\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">${key}</button>\n//         </li>\n//         `\n//     }\n//     outputTabsHtml += `</ul>>`;\n\n//     return [outputTabsHtml, outputTabContentHtml];\n\n// }\n\nconst getHtmlForm = (form) => {\n\n\n}\n\n\n\nconst renderForm = (addingTabId, data) => {\n    for (let key in data) {\n        let htmlTabForm = \"\";\n        for (let form in data[key]) {\n\n\n        }\n    }\n\n}\n\n\n\n\nconst renderSettingsPage = (data) => {\n\n    let settingsCamera = new _SettingsCamera_js__WEBPACK_IMPORTED_MODULE_1__.SettingsCamera(data);\n    settingsCamera.addForms();\n\n\n}\n\nconst showAlert = (text = \"ok\") => {\n    var myToastEl = document.getElementById('toast_id');\n    $(\"#toast_id > .toast-body\").text(text);\n    var myToast = new bootstrap.Toast(myToastEl);\n\n    return () => {\n        myToast.show();\n    }\n\n\n    // var my_toast = new bootstrap.Toast($(\"#toast_id\"));\n    // my_toast.show();\n}\n\n\nconst renderFilesysData = (data) => {\n    let cameraFree = data[\"free_space_camera\"][\"free_bytes\"];\n    let cameraCapacity = data[\"free_space_camera\"][\"capacity_bytes\"];\n    let usedSpaceOdroid = data[\"free_space_odroid\"][\"used\"];\n    let totalSpaceOdroid = data[\"free_space_odroid\"][\"total\"];\n    let usOdroidSpaceProc = usedSpaceOdroid / totalSpaceOdroid;\n\n    let maxCamera = $(\"#info_space_camera\").attr(\"max\");\n\n    $(\"#info_space_camera\").val(maxCamera * data[\"free_space_camera\"][\"procent_free_space\"] / 100);\n\n    let odroidBar = $(\"#info_space_odroid\");\n    let max = odroidBar.attr(\"max\");\n    odroidBar.val(max * usOdroidSpaceProc)\n\n    // let cameraBar = $(\"#info_space_camera\");\n    // max = cameraBar.attr(\"max\");\n\n\n    $(\"#camera_info\").append(\n        `\n        <span class=\"progress-value\"> Используется : ${((cameraCapacity - cameraFree) / GBYTES_TO_BYTES).toFixed(4)} ГБ </span>\n        <span class=\"progress-value\"> Всего : ${(cameraCapacity / GBYTES_TO_BYTES).toFixed(4)} ГБ </span> \n        `\n    )\n\n\n    $(\"#odroid_info\").append(\n        `\n        <span class=\"progress-value\"> Используется : ${(usedSpaceOdroid / GBYTES_TO_BYTES).toFixed(4)} ГБ </span>\n        <span class=\"progress-value\"> Всего : ${(totalSpaceOdroid / GBYTES_TO_BYTES).toFixed(4)} ГБ </span> \n        `\n    )\n\n    // cameraBar.val(max * (spaceCameraProcently / 100));\n\n\n\n}\n\n\nfunction main() {\n\n\n\n\n    addModalForBtn();\n\n\n    $(document).ready(function () {\n        // $('#accordionExample > input, select')\n\n        $('#inputResizeCapture, #inputCoeffCompressCapture').change(async function () {\n\n            var coeff_resize = $(\"#inputResizeCapture\").val();\n            var coeff_compress = $(\"#inputCoeffCompressCapture\").val();\n            var response = await cameraObj.__executeAjaxPromise('compress', {\n                \"coeff_compress\" : coeff_compress,\n                \"coeff_resize\"   : coeff_resize,\n            }, 'POST');\n            console.log($(this).val());\n        });\n\n\n\n\n\n\n        $('#button_settings_img').click(async () => {\n\n            try {\n                var promise = await cameraObj.__executeAjaxPromise('important', {\n                    'name_settings': 'imagesize',\n                });\n\n                $(\"#inputResizeCapture\").html(promise[\"imagesize\"][\"choice\"].reduce((acc, curr) => {\n                    return curr == promise[\"coeff_resize\"] ? `<option selected value=\"${curr}\"> ${curr} </option>` + acc : `<option value=\"${curr}\"> ${curr} </option>` + acc;\n                }, ''));\n                \n                $(\"#inputResizeCapture\").attr('value', promise[\"coeff_resize\"]);\n                $(\"#inputCoeffCompressCapture\").val(promise[\"coeff_compress\"]);\n\n                console.log(promise);\n            } catch (err) {\n                alert(err); // TypeError: failed to fetch\n            }\n\n\n\n\n        });\n\n\n        // promiseSettCapture = cameraObj.__executeAjaxPromise()\n\n\n\n        $(\"#refreshImportantSettingsButton\").click(() => {\n            cameraObj.getImportantSettings(settingsCamera);\n        });\n\n        $(\"#editImportantSettingsButton\").click(() => {\n\n            let diff = settingsCamera.editImportantSettings();\n\n            cameraObj.changeSettingsCamera(diff, (el) => console.log(el));\n            //cameraObj.getImportantSettings(settingsCamera);\n\n\n        });\n\n\n        $(\"#buttonImportantSettings\").click(() => {\n            cameraObj.getCameraConfig(settingsCamera);\n\n            // cameraObj.getImportantSettings(settingsCamera);\n            console.log(\"test2222\");\n            // var addChangeEvent = settingsCamera.addChangeEvent();\n            // addChangeEvent();\n            // console.log(addChangeEvent);\n\n\n\n        });\n\n\n\n\n\n\n\n\n\n        addActionZoomBtn(document.getElementById('img_panzoom'));\n\n\n\n\n\n\n        $(\"#editCurrCaptureSett\").click(() => {\n            let resizeCapture = $(\"#inputResizeCapture\").val();\n            let compressCapture = $(\"#inputCoeffCompressCapture\").val();\n            cameraObj.editCompressCurrCapture([compressCapture, resizeCapture], console.log)\n            // console.log(pixelSize);\n            // console.log(compresSize);\n        });\n\n\n        // $(\"#inputResizeCapture\").change(function () {\n\n\n\n\n        //     console.log($(this).val());\n        // });\n\n        $(\"#get_settings_camera\").click(() => {\n            //console.log(\"cache \" + $.cache)\n            //console.log($.cache)\n\n            // cameraObj.getCameraConfig(settingsCamera);\n\n            cameraObj.getAllFiles(renderMetadataAllFiles);\n            // $(\"#modal-body\").\n\n            // $(\"#modal-header\").generIn(\"\")\n            //console.log(\"test\");\n        });\n\n        $(\"#get_info_filesys\").click(() => {\n            cameraObj.getInfoFilesys(renderFilesysData);\n        });\n\n\n        $(\"#config_btn\").click(() => {\n            cameraObj.getCameraConfig(renderTabsHtml);\n        })\n\n\n\n        $(\"#get_all_files\").click(() => {\n            //console.log(\"get_all_files\");\n            var data = cameraObj.getAllFiles(renderMetadataAllFiles);\n\n            //console.log(\"end render____\");\n\n\n        });\n\n        $(\"#refresh\").click(() => {\n            cameraObj.syncWithCamera(sync);\n\n\n        })\n\n\n\n\n\n\n\n\n\n\n        $(\"#reload_btn\").click(() => {\n            cameraObj.reloadCamera();\n        })\n\n\n        $(\"#connect_to_camera\").click(async () => {\n\n            //console.log(\"connect_to_camera\");\n            \n            var isError = false;\n\n            \n            try {\n                utils.ip_addr = $('#ip_input').val();\n                cameraObj.bind('show_alert', showAlert);\n                var promiseInit = await cameraObj.init($('#ip_input').val(), activePage, ctx);\n                \n\n                \n                var infoSys = await cameraObj.__executeAjaxPromise(\"infosys\", '');\n\n                // var infoSys = await cameraObj.__executeAjaxPromise(\"infosys\", '');\n                // console.log(infoSys);\n                // cameraObj.getInfoFilesys(renderFilesysData);\n            } catch(e) {\n                isError = true;\n                console.log(e);\n                alert(e.responseText);\n            } \n\n            if (!isError) {\n                activePage();\n                cameraObj.getImportantSettings(settingsCamera);\n                renderFilesysData(infoSys);\n                // cameraObj.getInfoFilesys(renderFilesysData);\n\n\n                cameraObj.bind('show_alert', showAlert);\n                console.log('bindFunc');\n                settingsCamera.initCamera(cameraObj);\n             \n                \n                // settingsCamera\n                // settingsCamera.bindFunc('promiseQuery', cameraObj.__executeAjaxPromise);\n                settingsCamera.bindFunc('promiseQuery', cameraObj.__executeAjaxPromise);\n            }\n        \n           \n            \n           \n            \n            // cameraObj.getImportantSettings(settingsCamera);\n\n            //var promise = await cameraObj.__executeAjaxPromise('important');\n            // print(promise.json())\n\n\n\n        });\n\n\n\n        // $(\"#get_all_files\").click(() => {\n\n\n\n        $(\"#capture\").click(() => {\n            cameraObj.capture(addImginfoToTable);\n        });\n\n\n\n\n        // const myModal = new HystModal({\n        //     linkAttributeName: \"data-hystmodal\",\n        //     // настройки (не обязательно), см. API\n        // });\n\n\n\n\n\n\n\n        $(\"#apply_settings\").click(() => {\n            var diff = settingsCamera.parseCurrSettings();\n\n            //console.log(\"testrqw\");\n            $($(\"#confirmModal  div.modal-body\")[0]).html(\n\n                (function () {\n                    let resOutputHtml = '';\n                    let iter = 1;\n                    for (let key in diff) {\n                        resOutputHtml += `<p> ${iter++}. Значение <strong> ${key} </strong> на <strong> ${diff[key]} </strong> </p>`;\n\n                    }\n                    return resOutputHtml;\n                })());\n\n\n\n\n            $(\"#confirmModalBtn\").one('click', (el) => {\n                // //console.log(\"diff_inner_confirm\");\n                cameraObj.changeSettingsCamera(diff, (el) => console.log(el));\n                ////console.log(diff);\n\n\n\n\n            });\n\n\n\n\n\n\n            ////console.log(\"diff : \");\n\n            //SettingsCamera.parseCurrSettings();\n\n\n        })\n\n\n\n\n    })\n\n\n\n    // $('#exampleModalCenter').on('show.bs.modal', function (event) {\n    //     var button = $(event.relatedTarget) // Button that triggered the modal\n    //     var recipient = button.data('whatever') // Extract info from data-* attributes\n    //     // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).\n    //     // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.\n    //     var modal = $(this)\n    //     modal.find('.modal-title').text('New message to ' + recipient)\n    //     modal.find('.modal-body input').val(recipient)\n    //   })\n\n\n}\n\nmain();\n\n\n//# sourceURL=webpack:///./dashboard/scripts/main.js?");

/***/ }),

/***/ "./dashboard/scripts/utils.js":
/*!************************************!*\
  !*** ./dashboard/scripts/utils.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Utils\": () => (/* binding */ Utils)\n/* harmony export */ });\n\n\n\nclass Utils {\n\n\n    main_config = {\n        \"remote_addr\" : \"127.0.0.1\",\n    };\n\n\n    \n\n\n\n    \n\n    static ip_addr = \"127.0.0.1:5151\";\n\n\n    queryPromise(url, data, method = 'GET') {\n\n        url = this.__makeUrl(url)\n        return new Promise((resolve, reject) => {\n            $.ajax({\n                method: method,\n                url: url,\n                data: data,\n                // headers: headers,\n                dataType: 'json',\n                success: resolve,\n                error: (error) => {\n                    reject(error)\n                },\n            });\n        })\n    }\n\n}\n\n//# sourceURL=webpack:///./dashboard/scripts/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./dashboard/scripts/main.js");
/******/ 	
/******/ })()
;